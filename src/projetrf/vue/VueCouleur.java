/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projetrf.vue;

import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import projetrf.data.RequetesCouleur;
import projetrf.model.Couleur;

/**
 *
 * @author ademarly
 */
public class VueCouleur extends javax.swing.JFrame {

    /**
     * Creates new form VueCouleur
     */
    public VueCouleur() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitreCouleur = new javax.swing.JLabel();
        jButtonCouleurValider = new javax.swing.JButton();
        jLabelCouleurLibelle = new javax.swing.JLabel();
        jTextFieldCouleurLibelle = new javax.swing.JTextField();
        jComboBoxCouleurs = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabelTitreCouleur.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelTitreCouleur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitreCouleur.setText("Gestion des couleurs");

        jButtonCouleurValider.setBackground(new java.awt.Color(0, 0, 0));
        jButtonCouleurValider.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonCouleurValider.setForeground(new java.awt.Color(153, 204, 255));
        jButtonCouleurValider.setText("Enregistrer");
        jButtonCouleurValider.setEnabled(false);
        jButtonCouleurValider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonCouleurValiderMousePressed(evt);
            }
        });
        jButtonCouleurValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCouleurValiderActionPerformed(evt);
            }
        });

        jLabelCouleurLibelle.setText("Entrez le libelle d'une nouvelle couleur : ");

        jTextFieldCouleurLibelle.setFocusCycleRoot(true);
        jTextFieldCouleurLibelle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCouleurLibelleKeyPressed(evt);
            }
        });

        jComboBoxCouleurs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jComboBoxCouleurs.setName(""); // NOI18N
        jComboBoxCouleurs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBoxCouleursMousePressed(evt);
            }
        });
        jComboBoxCouleurs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCouleursItemStateChanged(evt);
            }
        });
        jComboBoxCouleurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCouleursActionPerformed(evt);
            }
        });
        jComboBoxCouleurs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxCouleursKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelCouleurLibelle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldCouleurLibelle)
                            .addComponent(jButtonCouleurValider, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelTitreCouleur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jComboBoxCouleurs, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitreCouleur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxCouleurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCouleurLibelle)
                    .addComponent(jTextFieldCouleurLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCouleurValider, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCouleurValiderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCouleurValiderMousePressed
       
    }//GEN-LAST:event_jButtonCouleurValiderMousePressed

    private void jButtonCouleurValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCouleurValiderActionPerformed
       if (this.jButtonCouleurValider.getText().equals("Modifier")){
            try {
                RequetesCouleur.updateCouleur(((Couleur)this.jComboBoxCouleurs.getSelectedItem()).getid(),this.jTextFieldCouleurLibelle.getText());
            } catch (SQLException ex) {
                Logger.getLogger(VueCouleur.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       if (this.jButtonCouleurValider.getText().equals("Valider")){
            try {
                RequetesCouleur.insertCouleur(this.jTextFieldCouleurLibelle.getText());
            } catch (SQLException ex) {
                Logger.getLogger(VueCouleur.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       updateJComboBoxCouleur();
    }//GEN-LAST:event_jButtonCouleurValiderActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        updateJComboBoxCouleur();
    }//GEN-LAST:event_formWindowOpened

    private void jComboBoxCouleursMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxCouleursMousePressed
        
    }//GEN-LAST:event_jComboBoxCouleursMousePressed

    private void jComboBoxCouleursItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCouleursItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            String test = ((Couleur)this.jComboBoxCouleurs.getSelectedItem()).getLibelle();
            this.jTextFieldCouleurLibelle.setText(test);
            if (this.jComboBoxCouleurs.getSelectedIndex()!=0){
                this.jLabelCouleurLibelle.setText("Modifiez la couleur : ");
                this.jButtonCouleurValider.setText("Modifier");
            }
            else{
                this.jLabelCouleurLibelle.setText("Entrez le libelle d'une nouvelle couleur : ");
                this.jButtonCouleurValider.setText("Valider");
            }
            if ((this.jTextFieldCouleurLibelle.getText().trim().equals("")))
            {
                this.jButtonCouleurValider.setEnabled(false);
            }
            else
            {
                this.jButtonCouleurValider.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jComboBoxCouleursItemStateChanged

    private void jComboBoxCouleursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCouleursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCouleursActionPerformed

    private void jTextFieldCouleurLibelleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCouleurLibelleKeyPressed
        if ((this.jTextFieldCouleurLibelle.getText().equals("")))
        {
            this.jButtonCouleurValider.setEnabled(false);
        }
        else
        {
            this.jButtonCouleurValider.setEnabled(true);
        }
    }//GEN-LAST:event_jTextFieldCouleurLibelleKeyPressed

    private void jComboBoxCouleursKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxCouleursKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCouleursKeyPressed

    public void updateJComboBoxCouleur(){
        this.jComboBoxCouleurs.removeAllItems();
        List<Couleur> couleurs = new ArrayList<Couleur>();
        try 
        {
            couleurs = RequetesCouleur.selectCouleur(jTextFieldCouleurLibelle.getText());
        } 
        catch (SQLException ex) 
        {
            if(ex.getErrorCode()== 1062)
            {
                JOptionPane.showMessageDialog(this, 
                "Erreur lors du chargement de la bdd",
                " Erreur ",
                JOptionPane.ERROR_MESSAGE);
            }
            Logger.getLogger(VueCouleur.class.getName()).log(Level.SEVERE, null, ex);
        }
        Couleur couleurVide = new Couleur(-1,"");
        this.jComboBoxCouleurs.addItem(couleurVide);
        for(Couleur couleur : couleurs){
            this.jComboBoxCouleurs.addItem(couleur);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueCouleur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueCouleur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueCouleur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueCouleur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new VueCouleur().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCouleurValider;
    private javax.swing.JComboBox jComboBoxCouleurs;
    private javax.swing.JLabel jLabelCouleurLibelle;
    private javax.swing.JLabel jLabelTitreCouleur;
    private javax.swing.JTextField jTextFieldCouleurLibelle;
    // End of variables declaration//GEN-END:variables
}
